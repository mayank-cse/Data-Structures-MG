Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.
You must write an algorithm that runs in O(n) time.

Example 1:
Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.

Example 2:
Input: nums = [0,3,7,2,5,8,4,6,0,1]
Output: 9

Constraints:
0 <= nums.length <= 105
-109 <= nums[i] <= 109
************************************************************
class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        for(int i = 0 ; i<nums.size();i++){
            cout<<nums[i];
        }
        int i = 0;
        int j = 1;
        int count = 1;
        if(nums.size()==0){
            return 0;
        }
        int maxCount = 1;
        // 1(i) 3(j) 4
        while(j<nums.size()){
            if(nums[j] - nums[i] == 0 ){
                i++;
                j++;
                continue;
            }
            if(nums[j] - nums[i] == 1 ){
                count++;
                i++;
                j++;
                continue;
            }
            if(count> maxCount){
                maxCount = count;
            }
                count = 1;
                i++;
                j++;
        }
        if(count>maxCount){
            maxCount=count;
        }
        return maxCount;
    }
};
**************************************************************
Success
Runtime: 246 ms, faster than 51.88% of C++ online submissions for Longest Consecutive Sequence.
Memory Usage: 33.8 MB, less than 70.16% of C++ online submissions for Longest Consecutive Sequence.
