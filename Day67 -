Given a string columnTitle that represents the column title as appears in an Excel sheet, return its corresponding column number.
For example:

A -> 1
B -> 2
C -> 3
...
Z -> 26
AA -> 27
AB -> 28 
...
 

Example 1:

Input: columnTitle = "A"
Output: 1
Example 2:

Input: columnTitle = "AB"
Output: 28
Example 3:

Input: columnTitle = "ZY"
Output: 701
 

Constraints:
1 <= columnTitle.length <= 7
columnTitle consists only of uppercase English letters.
columnTitle is in the range ["A", "FXSHRXW"].
Accepted - 517,940
Submissions - 850,119

**********************************************
class Solution {
public:
    int titleToNumber(string columnTitle) {
        //AA - 27
        //AZ - 26 + 26 - 52
        //ZY - 26*26 + 25 = 701
        int n = columnTitle.length();
        int ans=0;
        if(n==0){
            return 0;
        }
        if(n == 1){
            ans = columnTitle[n-1] - 'A' +1;
            return ans;
        }
        for(int i = 0;i<n;i++){
            ans += pow(26,n-i-1)*(columnTitle[i]-'A'+1);
        }
        //ans += (columnTitle[n-1]-'A'+1);
        return ans;
    }
};
**********************************************
Success
Runtime: 5 ms, faster than 29.82% of C++ online submissions for Excel Sheet Column Number.
Memory Usage: 6.3 MB, less than 10.11% of C++ online submissions for Excel Sheet Column Number.
