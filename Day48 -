Given two binary strings a and b, return their sum as a binary string.

Example 1:
Input: a = "11", b = "1"
Output: "100"

Example 2:
Input: a = "1010", b = "1011"
Output: "10101"

Constraints:
1 <= a.length, b.length <= 104
a and b consist only of '0' or '1' characters.
Each string does not contain leading zeros except for the zero itself.
Accepted - 853,808
Submissions - 1,685,353
*******************************************************************
class Solution {
public:
    string addBinary(string a, string b) {
        //a->1010 and b->1011
        reverse(a.begin(), a.end());//0101
        reverse(b.begin(), b.end());//1101
        string ans = "";
        int carry = 0;
        int i = 0;
        while( i< a.size() and i<b.size()){
            int sum = (a[i]-'0') + (b[i]-'0') + carry;
            // if(sum>=2){
            //     carry = 1;
            // }
            // else{
            //     carry = 0;
            // }
            carry = sum >= 2 ? 1:0;
            ans += sum%2 + '0'
                ;
            i++;
        }
        while(i<a.size()){
            int sum = (a[i]-'0') + carry;
            // if(sum>=2){
            //     carry = 1;
            // }
            // else{
            //     carry = 0;
            // }
            carry = sum >= 2 ? 1:0;
            ans += sum%2 + '0';
            i++;
        }
        while(i<b.size()){
            int sum = (b[i]-'0') + carry;
            // if(sum>=2){
            //     carry = 1;
            // }
            // else{
            //     carry = 0;
            // }
            carry = sum >= 2 ? 1:0;
            ans += sum%2 + '0';
            i++;
        }
        if(carry){
            ans += carry + '0';
        }
        reverse(ans.begin(), ans.end());
        return ans;
    }
};
******************************************************************
Success
Runtime: 0 ms, faster than 100.00% of C++ online submissions for Add Binary.
Memory Usage: 6.4 MB, less than 56.52% of C++ online submissions for Add Binary.
