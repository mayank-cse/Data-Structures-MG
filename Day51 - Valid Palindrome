A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.
Given a string s, return true if it is a palindrome, or false otherwise.

Example 1:
Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.

Example 2:
Input: s = "race a car"
Output: false
Explanation: "raceacar" is not a palindrome.

Example 3:
Input: s = " "
Output: true
Explanation: s is an empty string "" after removing non-alphanumeric characters.
Since an empty string reads the same forward and backward, it is a palindrome.

Constraints:
1 <= s.length <= 2 * 105
s consists only of printable ASCII characters.
Accepted - 1,326,001
Submissions - 3,147,615
**********************************************************************************
//Brute Force Method
class Solution {
public:
    bool isPalindrome(string s) {
        int k = 0;
        // int n = 0;
        for(int i = 0; i< s.length();i++){
            int lowChar = tolower(s[i]);
            if((lowChar-'a'<26 and lowChar-'a'>=0)||(lowChar-'0'>=0 and lowChar-'0'<=9)){
                s[k] = tolower(s[i]);
                k++;
                // cout<<s[k]<<endl;
            }
        }
        for(int i = 0;i<k;i++){
            cout<<s[i];
        }
        s = s.substr(0,k);
        string str1 = s;
        reverse(s.begin(),s.end());
        if(s==str1){
            return true;
        }
        return false;
    }
};
Success
Runtime: 81 ms, faster than 5.03% of C++ online submissions for Valid Palindrome.
Memory Usage: 7.4 MB, less than 49.33% of C++ online submissions for Valid Palindrome.
***********************************************************************************
class Solution {
public:
    bool isPalindrome(string s) {
        int k = 0;
        // int n = 0;
        for(int i = 0; i< s.length();i++){
            int lowChar = tolower(s[i]);
            if((lowChar-'a'<26 and lowChar-'a'>=0)||(lowChar-'0'>=0 and lowChar-'0'<=9)){
                s[k] = tolower(s[i]);
                k++;
                // cout<<s[k]<<endl;
            }
        }
        // for(int i = 0;i<k;i++){
        //     cout<<s[i];
        // }
        // s = s.substr(0,k);
        int i = 0;
        int j = k-1;
        // cout<<i<<" "<<j;
        while(i<j){
             // cout<<s[i]<<"|"<<s[j]<<endl;
            if(s[i]!=s[j]){
                return false;
            }
           
            i++;j--;
        }
        // string str1 = s;
        // reverse(s.begin(),s.end());
        // if(s==str1){
        //     return true;
        // }
        return true;
    }
};
